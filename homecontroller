using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;
using System.Net.Http;
using System.Threading.Tasks;
using Microsoft.AspNetCore.Mvc;
using WebApplication3.Models;
using System.Net.Http.Headers;
using Newtonsoft.Json;
using System.Text;
using System.Net;
using System.IO;

namespace WebApplication3.Controllers
{
    public class HomeController : Controller
    {
        
        public string Enviar([FromBody]ImageRequest image)
        {
            HttpClient client = new HttpClient();
            client.BaseAddress = new Uri("http://930b937a.ngrok.io/");
            string uri = "api/Broker";
            client.DefaultRequestHeaders.Accept.Add(new MediaTypeWithQualityHeaderValue("application/json"));
            var httpContent = new StringContent(JsonConvert.SerializeObject(image), Encoding.UTF8, "application/json");
            //var response = Task.Run(() => client.PostAsync(uri,httpContent)).Result;
            WebRequest response = WebRequest.Create("http://930b937a.ngrok.io/"+uri);

            // Set the Method property of the request to POST.      
            string json = JsonConvert.SerializeObject(image);
            response.Method = "POST";
            // Create POST data and convert it to a byte array.               
            byte[] byteArray = Encoding.UTF8.GetBytes(json);
            //lista de bytes                          
            // Set the ContentType property of the WebRequest.               
            response.ContentType = "application/json";
            // Set the ContentLength property of the WebRequest.               
            response.ContentLength = byteArray.Length;

            // Get the request stream.               
            Stream dataStream = response.GetRequestStream();
            // Write the data to the request stream.               
            dataStream.Write(byteArray, 0, byteArray.Length);
            // Close the Stream object.               
            dataStream.Close();
            // Get the response.                          
            WebResponse resquest = (HttpWebResponse)response.GetResponse();
            // Get the stream containing content returned by the server.               
            dataStream = resquest.GetResponseStream();
            // Open the stream using a StreamReader for easy access.               
            StreamReader reader = new StreamReader(dataStream);

            // Read the content.               
            //JavaScriptSerializer serializer = new System.Web.Script.Serialization.JavaScriptSerializer();              dynamic refr = serializer.DeserializeObject(reader.ReadToEnd());             dynamic refri_ = serializer.Serialize(refr);  
            var respon = JsonConvert.DeserializeObject(reader.ReadToEnd());

            //if (response.IsSuccessStatusCode)
            //{ return Task.Run(() => response.Content.ReadAsStringAsync()).Result; }
            return null;
        }
        public IActionResult Index()
        {
            return View();
        }

        public IActionResult About()
        {
            ViewData["Message"] = "Your application description page.";

            return View();
        }

        public IActionResult Contact()
        {
            ViewData["Message"] = "Your contact page.";

            return View();
        }

        public IActionResult Privacy()
        {
            return View();
        }

        [ResponseCache(Duration = 0, Location = ResponseCacheLocation.None, NoStore = true)]
        public IActionResult Error()
        {
            return View(new ErrorViewModel { RequestId = Activity.Current?.Id ?? HttpContext.TraceIdentifier });
        }
    }
}
